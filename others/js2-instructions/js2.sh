#!/bin/bash
CONN_STRING="#!/usr/bin/env bash

DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

CONF="YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFVUlhsT1ZFRjRUa1JSZDA1R2IxaEVWRTB3VFZSRmVVMTZRWGhPUkZGM1RrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVFVrNENrRjRVamR3Yms4clltd3ZaazlMVVVOamNIbFVUVTVLVUdGSFdVczFWa1YxUzNOMWN6ZFRLeXRPWXpKTGN6TTVhM0pyT0cxYWFYTnhlWFpSUlV0R1JVZ0tWVlZCT1hWVFQxQnZkR05wUVdvd2VTdFplRW8wWmpock1WWTJUMFoxWjBaMFdXeExRelZ1Y2s1dmQxaDZiMUZFY0VsU1JFOXBjVE5JYzNac1dFTTBUUXBNUTNFMlIwODNWVEp3YlVSWlozVk9OWGhWTlRaTFR6azBNazlOT1hrM1Z5dHJZVFJRVmxKU2JEVnhZbWt3UTNScWRGZ3lNVUpNYTBWSGJuSlhMMk41Q21WbE9HODVaa1ZrUVc5b1owZEVVMEZuTVhwdGJ6RXdiMjlLZFhsSFFsVk1UMHRGTlZwMWIycFJjR2xJYVhGcllXSnpkRXh2ZUdaQ1QxcERlbG93TDFBS1VrWkJkVGhhVmxaWGIycDFTVnBvV0hJNFMzRklja1I1VDNKQmFtVlNla1IwZFhRM01URmlMMVZ0VTJGeFJ6aG1ZblJLWW1ad09VcGlOMHRJYVdkcmVncGpjMDF4UzNvNWIyWm1NSFZPUWpSUlJtc3dRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkRPV2wzVTNCaE9WVlVSbTlGTVdOYU56Rm5OSFJpWTFWTlltNU5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUVhWcE1GSndkMDgxVUM4dlFucGpRVzkzV0FvMVVUWXphbUpCZERoSVZWSmtSV1Y0ZUZKT1FrdHRNbFpNWW1sc2VqUTVNRTl4VWs1VWFHNUlRMjVhYzJGQlYxWTBkakZuU0VsWmNTdHVZaTlPUWpCM0NrcEdRVFV5Y0U5RlpUUm1SM2hETTFGVlkwRm1ZWEZVYW04MlQzWlFjV1ZRWTJwYWQxSXJXbGh5UzNSRlNHNU1NSE5YZHpreWEwRmFZeXMzWkhRcmJEZ0tPRVpFUXpKS1dtSnFkQzlFVDNkaFkxZG1VakJhTm5aRkwwUnRVRWQwT0ZSMFRrZzVUMUoyTmtkelNVTnVRa1JCVFhoYVN6QnlkbWx6UjNsSWRGZHBWQXBrYVZGNk9Ia3dSRmxsUVZoaVNEaHlaMlJ0UlZGaFNtMXlTekZJY0dJeVZIZFlXWFZ5VEVScU1HTlpkelI1YVdJMVJYUjJNR0pUT0RKcGVUbGhVbXMyQ2xVeVVtaFJXVzFGTnpSb01EWmpjMVJQTTFGek5sbDFaMk5zYUVad1MxUlFTRFJMVG0xbVdHODVZV1pIVTNNcmVDczNhVzVZYlhOelVrMUVkRlZCTVdJS1VIWXdQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTQ5LjE2NS4xNTUuMjQyOjY0NDMKICBuYW1lOiBjbHVzdGVyLmxvY2FsCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBjbHVzdGVyLmxvY2FsCiAgICB1c2VyOiBrdWJlcm5ldGVzLWFkbWluLWNsdXN0ZXIubG9jYWwKICBuYW1lOiBrdWJlcm5ldGVzLWFkbWluLWNsdXN0ZXIubG9jYWxAY2x1c3Rlci5sb2NhbApjdXJyZW50LWNvbnRleHQ6IGt1YmVybmV0ZXMtYWRtaW4tY2x1c3Rlci5sb2NhbEBjbHVzdGVyLmxvY2FsCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbi1jbHVzdGVyLmxvY2FsCiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSlZFTkRRV2R0WjBGM1NVSkJaMGxKV1hOeEsyTlROM0JXV0ZsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUa1JGZUUxcVZYZE5WRkV3VFVSU1lVWjNNSGxPVkVWNFRXcFZkMDFVVVRCTlJGWmhUVVJSZUFwR2VrRldRbWRPVmtKQmIxUkViazQxWXpOU2JHSlVjSFJaV0U0d1dsaEtlazFTYTNkR2QxbEVWbEZSUkVWNFFuSmtWMHBzWTIwMWJHUkhWbnBNVjBackNtSlhiSFZOU1VsQ1NXcEJUa0puYTNGb2EybEhPWGN3UWtGUlJVWkJRVTlEUVZFNFFVMUpTVUpEWjB0RFFWRkZRWFZQVDBORVdYRmtaV3MwSzA1dFpWWUtRekJ2VGpOd01uRXdXbGRvZEdkeFRpOWxSVXM1TVZCUVJqbGxWRTlhVjFoR1UySnRVWGc1WWxSeU4wNXplRlZhUVdoWFVYUmhUR3hNTW5SNmIyZE5PQW8wYWxoV2NXZFVNMXBpUkZkamFWRTJkRUp2ZGpWQ1JtTkpkVXhwYVRsdU4zRklMM1JEYTNkak0wMU5NMjkwTnpScmFGZElVM2hpZWpkelZEWktXVU13Q2pjMk9YTjZZMGRQVDBwMFRuUm9XRmRuYkhGcVYybFBMM2R2UzBSQllVbG9lbEF3Wlc5YU1IQmhiblJVZEhWWVVXNTZPVXBLYkVKRVlUZHJjRmgyWkVjS1lVUmxXbEkwYVd0cWFqZFRRemh3YUhSQ1NVRjZPWGd5V0ZCMmJtRlFNVk5QVlROVFRFWldaMmhoY21GdGNrRk5ORGt5S3pSRVJrdHVVa2RaVlc0NU1ncFBiM1I0THpKME16SlZXVUZrTm1zMU9WTjRVVXRqY1hkaWFVdEJRMmRQYlVwWVFubDFNSGREUzA0NGQwZEViRWRqT1dRMVkxWjZabFJNTVU5SWNXMHdDbEpSZVVGTWQwbEVRVkZCUW04eFdYZFdSRUZQUW1kT1ZraFJPRUpCWmpoRlFrRk5RMEpoUVhkRmQxbEVWbEl3YkVKQmQzZERaMWxKUzNkWlFrSlJWVWdLUVhkSmQwUkJXVVJXVWpCVVFWRklMMEpCU1hkQlJFRm1RbWRPVmtoVFRVVkhSRUZYWjBKUmRsbHpSWEZYZGxaRmVHRkNUbGhIWlRsWlQweFhNMFpFUndvMWVrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQmExZzBjRmR0YVRoeE5TOVVXVUZPWlRKVE1rVTNWRTFLZEcwM0x6aFdZazgwVW5sd0NsRmxlVGhYVG1GRFVFaG9iakJGWWxwWFFYb3JMMlI0Y1RGS1R6WnVSakZrU2sxbVFqaHJWM1kxTTFodlduQlpXRWhoY0hSbE9XVnNablZqVmsxbk4yUUthRlJ0TWxacVZHZFFaV3AzYWpkWFdEUnRNemRwTnpkTVpqVjZNalZMTjFsblRYTk5ZWFIzTTFFNVNXMXNWVTg1VGtKdlkwTlFiRlE0VnpKbGMwcDNVUXBGV0dnd1FubERSMWxyWkU1b2VVOXlVRzlGTm5wMVREQlNaMWR0SzB4SU9WZEtTRVJTYVd0VmJWbFZkQ3RKYUVoQ1lVeHRPV3RXT0hCdWRsVm9kVmRUQ2pGck1rMHlZekEzV0d4V1VrWlFWVTlGVVdaWWRVUmxaRmQ0WlhOaU1rMW9iVU40VDNOclUwTnlRWGh6UWpoRU5VNVhOVEpUYkZsYVFuTmpOemhTYzBzS1YyeG1TVloyV2pGaVJWbExSVUYzVVhoV09XdEtLM0UyZDJFMWFsTmFUbFowZERnNVlpdGFNVTVKT0VoWEszRmxOVkU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiMmRKUWtGQlMwTkJVVVZCZFU5UFEwUlpjV1JsYXpRclRtMWxWa013YjA0emNESnhNRnBYYUhSbmNVNHZaVVZMT1RGUVVFWTVaVlJQV2xkWUNrWlRZbTFSZURsaVZISTNUbk40VlZwQmFGZFJkR0ZNYkV3eWRIcHZaMDA0TkdwWVZuRm5WRE5hWWtSWFkybFJOblJDYjNZMVFrWmpTWFZNYVdrNWJqY0tjVWd2ZEVOcmQyTXpUVTB6YjNRM05HdG9WMGhUZUdKNk4zTlVOa3BaUXpBM05qbHplbU5IVDA5S2RFNTBhRmhYWjJ4eGFsZHBUeTkzYjB0RVFXRkphQXA2VURCbGIxb3djR0Z1ZEZSMGRWaFJibm81U2twc1FrUmhOMnR3V0haa1IyRkVaVnBTTkdscmFtbzNVME00Y0doMFFrbEJlamw0TWxoUWRtNWhVREZUQ2s5Vk0xTk1SbFpuYUdGeVlXMXlRVTAwT1RJck5FUkdTMjVTUjFsVmJqa3lUMjkwZUM4eWRETXlWVmxCWkRack5UbFRlRkZMWTNGM1ltbExRVU5uVDIwS1NsaENlWFV3ZDBOTFRqaDNSMFJzUjJNNVpEVmpWbnBtVkV3eFQwaHhiVEJTVVhsQlRIZEpSRUZSUVVKQmIwbENRVVZETmxwaE1sZ3JZMjR6TW04dmVBcGpOWGxuVFVoeVptVkJORzQ1U2xadE0wazRiRmRzUmpoYVpWSlRPVXBuVlZwMlFtZDZabmg0TTJWWFZIQjZRWEpGY2xwSlJtOUhRWEJtZDFWQmEyVlhDa2R3Y1ZobWJGbHVjSFpXVkVVNFEybE1iWE5tVUN0VU5ISjFhMGg0V1doM2NVVnZNV1o1WXpkMmJEaE1aVlUzYzBGT2IybzNNVzAyYWpKMmIxTnBjMWdLUWtWR2JHbFNTQzh3VjNFdk9VWlVja1ZGTlZOeVVqTkNjR3RFVTBZMWRrRlRZMXBNWW14aGJHWmhRelZNTVM5R1QycEJVMVVyVm5obmFYYzFjV1ZLZUFwbFpYazJWVFIwTVhSd1ZIYzFia2t2T0VoU2VFRnpXUzkyV1ZwV1NuY3hSMUJHVG1Oa1luQjBTRlJoVnpWNFVtdGFibnB0TXpSblVFd3JSWFZzWlZKUENtMUdWRVJ0ZFc0M2RIaDJkWE42Vm1aUWFEUnJNbU4wY0ZKaVRWaG5XRlZNVmpVcmVqRktlVkJXVWtGR2RTOUNWMUpTWjNwTk5Fd3lTMVprVkhnclpFd0tUWFl3ZFUxUlJVTm5XVVZCZVhvNFRrOWFOa2RIYVdoTVpEazFXRWxMUzFVMlYweHVOVTAxY1dwNVZTdG5SVlk0VEdRclpqQjFkMFpoVkhsdmNVUnBlUW8zTkhGR1RIVnZXR2h4ZDB0NFNuVTBMMFZrTUZaYVRVMDRZMUUwZFhReVNucFBTbmwyVUdSV1RWRmljelV3Ym1GMmRHbExOamM0ZVdRMFJURXpaM281Q2tGNmVXVkVhbXMyTkhSeE5WVm5NWEJVTVVRMU5saGhRbTB5ZFZSS1NFMDRhakJqTjA0eVkyeElWRzV0VTB4WWRXVnNOMGN4T1UxRFoxbEZRVFpQUTNBS05sTXpaa042ZDB4SlZIVk9WMUZGY0hOcFpscHhlVVV4YlUwM2NXaHZTMEV5Vm5Sb1NrOXFUVnA0TWpkWFQzUk5ibGcyUTJ0RmVWSXhhMWcyVWxFd1NBcHBRVU5TYm5BMllsaERXRzlXVFM5NE1HMUVNRE5oTlM5WE9VSmllSEJ3UlZkcFp6QXhZbWhNVFhObVFYTTNRVmhITDJwTFZrczFOV1ZpV1ZSUmJ6UnBDazk2WW1oRlRVMXFNSEJNWkRoV1YwWlBWbFp0VG5Kc2NrTlFiVVp1TjFSek5qQkhjR1ZNVlVObldVSjNaa1J1YldwTmVYUlNNbGhXVG5CSVJEbDRZM2dLVURsTlZuVkJVVlJ4TUc4elJtSXpVR0ZpWkRkMFlrdGpPWEo0YkU1a1VXRmlVRU5sT0ZkSlNqTTRaWEF6YjBZek5XeG5SbFZJYUZkcFowaFljMlZ4YkFwSlUweGtXVWx0WlhNM1YwUnZSVlpZV1VkTmNXSkZkMVJDWTJvMVZuWnFhM2hNVXpWTVNWWm9jbWx1YjNSd1JqRkhNWHBzUkM5b1ZrOTViRnBuUVcxb0NsSnZkMGxqY1dGQk1GWXlXa2RySzJSSVJEQjVhbmRMUW1kSVpERkdNMDl1ZEdsNE4wcHVTbkp4TDNkdFNHODViVFZpT1d4RU5uUk9TMUI2U3pSUVIyVUtZMFo1VVd4d2JXMXdURE5sU21KVU9HVnNhM1pFWm1oUFpWTXdSMjVCUW13eWEzb3hjVEZuTDJ0alp5OTVlSEJTTldkdU5WRjRaVVE0UkVGWFdHc3ljQXBLYTBWcVoyd3JVVWhCWlZGdmNXOVZiWGxYU2xGdlRIVndWRFpWZW01YU1XeHJiMVUzT0VaTE1sWkxPSFprVWtaUVIwOURRbUZtWVRVelMyWlRjRVEzQ2xrNFYzQkJiMGRCU0dGd2NtMXFZMjVITXpaelEydG5PSGt3YWs4MVl6SkNLelpNYVROSlluVmlXV3hYYTBsbWIxZ3hWbnA1Y0doWk9HUlJWR0pxWlRZS04wcDZWVzQ1VXl0RmNtSkVXV2RWTkdSWVZIcENUVFIzUjJaclFUUkhjRXQ1Y25KU1UxZDNjRzU0VDJwRlNVRTRSa1IzVTNoRGFsZGpUME5JVnl0d1N3cFVOazlWVURsYVZuVmFWVWw2YVVSVk5YcHpXRFZwTWs1bWNITlRlRGxHVFhnMVNqWm1iek5uVjBsR0syWjZRV3QwYlRnOUNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09Cg=="
GROUP=$1
PORT=$2

if [[ $GROUP == "" ]];
  then
    echo "You must specify the group name (e.g., 'group-1')"
    exit
fi

if [[ $PORT == "" ]];
  then
    PORT="5800"
fi

echo -n "$CONF" | base64 --decode > "$DIR/.kubeconfig.yaml"
chmod u+x "$DIR/.kubeconfig.yaml"

TMP=$KUBECONFIG
export KUBECONFIG="$DIR/.kubeconfig.yaml"
kubectl \
    port-forward \
    svc/jupyterlab "${PORT}:8003" \
    -n "${GROUP}" \
    --context kubernetes-admin-cluster.local@cluster.local
rm -f "$KUBECONFIG"
if [[ $TMP == "" ]];
  then
    unset $KUBECONFIG
  else
    export KUBECONFIG=$TMP
fi"
GROUP=$1
PORT=$2
echo -n $CONN_STRING | base64 --decode | bash -s -- $GROUP $PORT
